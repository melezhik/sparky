unit module Sparky::JobApi;

use Sparky;

use Sparrow6::DSL;

sub job-queue (%config) is export {

  my $project;

  if %config<project>  {
    $project = %config<project>;
  } else {
    my $workers = %config<workers> || 4;
    $project = "{tags()<SPARKY_PROJECT>}.spawned_%.2d".sprintf((^$workers).pick(1)+1);
  }

  my $rand = ('a' .. 'z').pick(20).join('');

  my $job-id =  %config<job-id> || "{$rand}{$*PID}";

  my $sparky-project-dir = "{%*ENV<HOME>}/.sparky/projects/{$project}";

  mkdir "{$sparky-project-dir}/.triggers" unless "{$sparky-project-dir}/.triggers".IO ~~ :d;

  unless "{$sparky-project-dir}/sparrowfile".IO ~~ :f {
    spurt "{$sparky-project-dir}/sparrowfile", "# dummy file, generated by sparrowdo";
  }

  my $cache-dir = "{%*ENV<HOME>}/.sparky/.cache/$job-id/";

  mkdir $cache-dir;

  "{$cache-dir}/config.pl6".IO.spurt(config().perl);

  my %trigger = EVALFILE("{%*ENV<HOME>}/.sparky/work/{tags()<SPARKY_PROJECT>}/.triggers/{tags()<SPARKY_JOB_ID>}");

  %trigger<cwd> = $cache-dir;

  %trigger<sparrowdo> || {};

  %trigger<description> = %config<description> || "spawned job";

  %trigger<sparrowdo><tags> = %config<tags>.map({"{$_.key}={$_.value}"}).join(",") if %config<tags>;

  %trigger<sparrowdo><conf> = "config.pl6";

  "{$sparky-project-dir}/.triggers/$job-id".IO.spurt(%trigger.perl);

  copy $*PROGRAM, "{$cache-dir}/sparrowfile";

  return $job-id;

}


